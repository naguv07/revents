{"version":3,"sources":["features/events/eventList/EventListAttendee.jsx","features/events/eventList/EventListItem.jsx","features/events/EventActions.js","features/events/EventConstants.js","features/events/eventList/EventList.jsx","features/events/eventDashboard/EventDashboard.jsx","features/nav/SignedInMenu.jsx","features/auth/authActions.js","features/auth/authConstants.js","app/common/modals/modalReducer.js","features/nav/SignedOutMenu.jsx","features/nav/NavBar.jsx","features/home/HomePage.jsx","features/events/eventDetailed.jsx/EventDetailedHeader.jsx","features/events/eventDetailed.jsx/EventDetailedInfo.jsx","features/events/eventDetailed.jsx/EventDetailedChat.jsx","features/events/eventDetailed.jsx/EventDetailedSidebar.jsx","features/events/eventDetailed.jsx/EventDetailed.jsx","app/common/form/myTextInput.jsx","app/common/form/myTextArea.jsx","app/common/form/mySelectInput.jsx","app/api/categoryOptions.js","app/common/form/myDateInput.jsx","features/eventForm/EventForm.jsx","features/sandbox/testReducer.js","features/sandbox/sandbox.jsx","app/common/modals/modalWrapper.jsx","features/sandbox/testModal.jsx","features/auth/loginForm.jsx","app/common/modals/modalManager.jsx","app/layouts/App.jsx","serviceWorker.js","features/events/EventReducer.js","app/api/sampleData.jsx","features/auth/authReducer.js","app/store/rootReducer.js","app/layouts/ScrollToTop.jsx","index.js","app/store/configureStore.js"],"names":["EventListAttendee","attendee","Image","width","height","className","src","photoURL","alt","title","name","roundedCircle","EventListItem","event","dispatch","useDispatch","ListGroup","ListGroupItem","Media","hostPhotoURL","Body","hostedBy","format","date","venue","disabled","horizontal","attendees","map","key","id","description","Button","variant","onClick","type","payload","as","Link","to","process","EventList","events","EventDashboard","useSelector","state","Row","Col","md","SignedInMenu","history","useHistory","currentUser","auth","DropdownButton","alignRight","email","color","Dropdown","Item","push","openModal","closeModal","SignedOutMenu","Nav","modalType","href","NavBar","setFormOpen","authenticated","Navbar","fixed","collapseOnSelect","expand","Container","Brand","NavLink","exact","style","marginRight","Toggle","aria-controls","Collapse","HomePage","Jumbotron","fluid","EventDetailedHeader","position","category","filter","bottom","left","EventDetailedInfo","city","EventDetailedChat","backgroundColor","marginBottom","fontSize","Form","Control","rows","EventDetailedSideBar","length","EventDetailed","match","find","evt","params","MyTextInput","label","pros","useField","field","meta","Group","controlId","Label","isInvalid","touched","error","isValid","Feedback","MyTextArea","MySelectInput","props","helpers","custom","value","onChange","e","setValue","target","onBlur","setTouched","options","opt","text","categoryData","MyDateInput","setFieldValue","useFormikContext","selected","Date","EventForm","selectedEvent","initialValues","useState","validationSchema","Yup","required","onSubmit","values","createEvent","cuid","isSubmitting","dirty","placeholder","placeholderText","timeFormat","showTimeSelect","timeCaption","dateFormat","loading","initialState","data","Sandbox","test","modalProps","ModalWrapper","children","size","header","Modal","show","onHide","Header","closeButton","Title","TestModal","LoginForm","password","setSubmitting","Spinner","animation","ModalManager","renderedModal","modalLookup","currentModal","modal","ModalComponent","App","useLocation","path","component","render","Boolean","window","location","hostname","rootReducer","combineReducers","modalprops","ScrollToTop","pathname","useEffect","scrollTo","store","createStore","devToolsEnhancer","rootEl","document","getElementById","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.0837fdd6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Image } from 'react-bootstrap';\r\n\r\nexport default function EventListAttendee({attendee,...props}) {\r\n    return(\r\n            <Image\r\n                width={25}\r\n                height={25}\r\n                className=\"mr-3\"\r\n                src={attendee.photoURL}\r\n                alt=\"Event Img\"\r\n                title={attendee.name}\r\n                roundedCircle\r\n            />\r\n    )\r\n}","import React from 'react';\r\nimport { Media, Image, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\r\nimport EventListAttendee from './EventListAttendee';\r\nimport WatchLaterIcon from '@material-ui/icons/WatchLater';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteEvent } from '../EventActions';\r\nimport {format} from 'date-fns'\r\n\r\n\r\nexport default function EventListItem({event}) {\r\n    const dispatch = useDispatch()\r\n    return(\r\n        <>\r\n            <ListGroup className=\"p-2\">\r\n                <ListGroupItem>\r\n                    <Media className=\"bg-white mt-2 p-2 rounded\">\r\n                        <Image\r\n                            width={64}\r\n                            height={64}\r\n                            className=\"mr-3\"\r\n                            src={event.hostPhotoURL}\r\n                            alt=\"Event Img\"\r\n                            roundedCircle\r\n                        />\r\n                        <Media.Body>\r\n                            <h5>{event.title}</h5>\r\n                            <p>\r\n                                Hosted by <b>{event.hostedBy}</b>\r\n                            </p>\r\n                        </Media.Body>\r\n                    </Media>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <Media >\r\n                        <span>\r\n                            <WatchLaterIcon />  {format(event.date,'MMMM d, yyyy h:mm a')}\r\n                            <RoomIcon /> {event.venue}\r\n                        </span>\r\n                    </Media>\r\n                </ListGroupItem>\r\n                <ListGroupItem disabled>\r\n                    <Media >\r\n                        <ListGroup horizontal>\r\n                            {event.attendees.map(attendee=>\r\n                                <EventListAttendee className=\"m-auto\" attendee={attendee} key={attendee.id}/>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Media>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <Media >\r\n                        <div>{event.description}</div>\r\n                        <Button className=\"float-right ml-2\" variant=\"danger\" onClick={() => dispatch(deleteEvent(event.id))}>Delete</Button>\r\n                        <Button className=\"float-right ml-2\" variant=\"info\" as={Link} to={process.env.PUBLIC_URL+`/events/${event.id}`}>View</Button>\r\n                    </Media>\r\n                </ListGroupItem>\r\n            </ListGroup>\r\n        </>\r\n    )\r\n}","import { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT } from \"./EventConstants\";\r\n\r\nexport function createEvent(event){\r\n    return{\r\n        type : CREATE_EVENT,\r\n        payload : event\r\n    }\r\n}\r\nexport function updateEvent(event){\r\n    return{\r\n        type : UPDATE_EVENT,\r\n        payload : event\r\n    }\r\n}\r\n\r\nexport function deleteEvent(eventId){\r\n    return{\r\n        type : DELETE_EVENT,\r\n        payload : eventId\r\n    }\r\n}","export const CREATE_EVENT = 'CREATE_EVENT'\r\nexport const UPDATE_EVENT = 'UPDATE_EVENT'\r\nexport const DELETE_EVENT = 'DELETE_EVENT'","import React from 'react';\r\nimport EventListItem from './EventListItem';\r\n\r\nexport default function EventList({events}) {\r\n    return(\r\n        <>\r\n            {events.map(event=>\r\n                <EventListItem event={event} key={event.id}/>\r\n            )}\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport EventList from '../eventList/EventList';\r\nimport { useSelector } from 'react-redux';\r\nconst EventDashboard = () => {\r\n    const {events} = useSelector(state=>state.event)\r\n\r\n    return(\r\n        <Row>\r\n            <Col>\r\n                <EventList events={events} />\r\n            </Col>\r\n            <Col md=\"4\">\r\n                <h2>Event Filters</h2>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default EventDashboard;","import React from 'react';\r\nimport { Dropdown,DropdownButton } from 'react-bootstrap';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signOutUser } from '../auth/authActions';\r\n\r\nexport default function SignedInMenu(){\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const {currentUser} = useSelector(state=>state.auth)\r\n    return(\r\n        <>\r\n            <DropdownButton\r\n                alignRight\r\n                title={currentUser.email}\r\n                id=\"dropdown-menu-align-right\"\r\n                color=\"danger\"\r\n                variant=\"outline-light\"\r\n                >\r\n                   <Dropdown.Item as={Link} to={process.env.PUBLIC_URL+\"/createevent\"}>\r\n                        <AddIcon/> {' '}\r\n                        Create Event\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item >\r\n                        <AccountCircleIcon/> {' '}\r\n                        My Profile\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Item  onClick={()=>{\r\n                        dispatch(signOutUser())\r\n                        history.push(process.env.PUBLIC_URL+\"/\")\r\n                    }}>\r\n                        <PowerSettingsNewIcon/> {' '}\r\n                        Logout\r\n                    </Dropdown.Item>\r\n            </DropdownButton>\r\n        </>\r\n    )\r\n}","import { SIGN_IN_USER, SIGN_OUT_USER } from \"./authConstants\";\r\n\r\nexport function signInUser(payload){\r\n    return{\r\n        type : SIGN_IN_USER,\r\n        payload\r\n    }\r\n}\r\nexport function signOutUser(){\r\n    return{\r\n        type : SIGN_OUT_USER,\r\n    }\r\n}","export const SIGN_IN_USER = 'SIGN_IN_USER'\r\nexport const SIGN_OUT_USER = 'SIGN_OUT_USER'\r\n\r\n","const OPEN_MODAL = 'OPEN_MODAL'\r\nconst CLOSE_MODAL = 'CLOSE_MODAL'\r\n\r\nexport function openModal(payload){\r\n    return{\r\n        type : OPEN_MODAL,\r\n        payload\r\n    }\r\n}\r\nexport function closeModal(payload){\r\n    return{\r\n        type : CLOSE_MODAL,\r\n        payload\r\n    }\r\n}\r\n\r\nconst initalState = null\r\nexport default function modalReducer(state=initalState,{type,payload}){\r\n    switch(type){\r\n        case OPEN_MODAL:\r\n            const {modalType,modalprops} = payload\r\n            return {modalType,modalprops}\r\n        case CLOSE_MODAL:\r\n            return null\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport { Nav, Button } from 'react-bootstrap';\r\nimport { openModal } from '../../app/common/modals/modalReducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function SignedOutMenu(){\r\n    const dispatch = useDispatch()\r\n    return(\r\n        <>\r\n            <Nav.Link \r\n                onClick={()=>dispatch(openModal({modalType : 'LoginForm'}))}\r\n                >\r\n                    <Button type=\"button\" variant=\"outline-light\">Login</Button>\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#pricing\"><Button type=\"button\" variant=\"outline-light\">Sign UP</Button></Nav.Link>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Navbar, Nav, Container, Button } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport SignedInMenu from './SignedInMenu';\r\nimport SignedOutMenu from './SignedOutMenu';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function NavBar ({setFormOpen}){\r\n    const {authenticated} = useSelector(state=>state.auth)\r\n\r\n    return(\r\n        <Navbar fixed=\"top\" collapseOnSelect expand=\"lg\" variant=\"dark\" >\r\n            <Container>\r\n                <Navbar.Brand as={NavLink} exact to={process.env.PUBLIC_URL+\"/\"}>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL+\"/assets/logo.png\"}\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                        alt=\"logo\"\r\n                        style={{marginRight:15}}\r\n                        />\r\n                        Re-events\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={NavLink} to={process.env.PUBLIC_URL+\"/events\"}>Events</Nav.Link>\r\n                        <Nav.Link as={NavLink} to={process.env.PUBLIC_URL+\"/sandbox\"}>Sandbox</Nav.Link>\r\n                        {authenticated &&\r\n                        <Nav.Link as={NavLink} to={process.env.PUBLIC_URL+\"/createevent\"}><Button type=\"button\" variant=\"success\">Create Event</Button></Nav.Link>\r\n                        }\r\n                    </Nav>\r\n                    <Nav>\r\n                        {\r\n                            authenticated\r\n                            ?\r\n                            <SignedInMenu />\r\n                            :\r\n                            <SignedOutMenu/>\r\n                        }\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}","import React from 'react';\r\nimport { Jumbotron, Image, Button, Container } from 'react-bootstrap';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\n\r\nexport default function HomePage({history}){\r\n    return(\r\n        <Jumbotron className=\"bg-dark text-center text-white  masthead\">\r\n            <Container fluid>\r\n                <h1>\r\n                    <Image\r\n                    src={process.env.PUBLIC_URL+\"/assets/logo.png\"} />\r\n                    Re-events\r\n                </h1>\r\n                <Button variant=\"outline-light dark\" onClick={()=>history.push(process.env.PUBLIC_URL+\"/events\")}>\r\n                        Get Started\r\n                    <ArrowRightAltIcon/>\r\n                </Button>\r\n            </Container>\r\n        </Jumbotron>\r\n    )\r\n}","import React from 'react';\r\nimport { Media, Image, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {format} from 'date-fns';\r\n\r\n\r\nexport default function EventDetailedHeader({event}){\r\n    const eventImageStyle = {\r\n        filter: 'brightness(30%)',\r\n        width : '100%'\r\n    };\r\n    \r\n    const eventImageTextStyle = {\r\n        position: 'absolute',\r\n        bottom: '5%',\r\n        left: '5%',\r\n        height: 'auto',\r\n        color: 'white'\r\n    };\r\n    return(\r\n        <>\r\n            <Media style={{position:\"relative\",}}>\r\n                <Image src={process.env.PUBLIC_URL+\"/assets/categoryImages/\"+event.category+\".jpg\"} style={eventImageStyle}/>\r\n                <Media.Body style={eventImageTextStyle}>\r\n                    <h3>{event.title} </h3>\r\n                    <p>{format(event.date,'MMMM d, yyyy h:mm a')}</p>\r\n                    <p>{event.hostedBy}</p>\r\n                </Media.Body>\r\n            </Media>\r\n            <Media className=\"p-2 bg-white\">\r\n                <Media.Body>\r\n                    <Button variant=\"secondary\" >Cancel My Place </Button> {' '}\r\n                    <Button variant=\"success\" >Join This Event </Button>\r\n                    <Button as={Link} to={process.env.PUBLIC_URL+`/manage/${event.id}`} variant=\"warning text-white\" className=\"float-right\" >Manage Event </Button>\r\n                </Media.Body>\r\n            </Media>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Media, ListGroup } from 'react-bootstrap';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport {format} from 'date-fns';\r\nexport default function EventDetailedInfo({event}){\r\n    return(\r\n        <Media>\r\n            <ListGroup className=\"w-100 mt-2\" >\r\n                <ListGroup.Item>\r\n                    <InfoIcon className=\"mr-3\"/> {event.description}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <EventIcon className=\"mr-3\"/> {format(event.date,'MMMM d, yyyy h:mm a')}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <LocationOnIcon className=\"mr-3\"/> {event.city}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </Media>\r\n            \r\n    )\r\n}","import React from 'react';\r\nimport { Media, Image, Form, Button } from 'react-bootstrap';\r\n\r\nexport default function EventDetailedChat(){\r\n    const headStyle={\r\n        backgroundColor: 'teal',\r\n        marginBottom : 0,\r\n    }\r\n    return(\r\n        <Media className=\"mt-2\">\r\n            <Media.Body >\r\n                <h4 className=\"text-white p-2\" style={headStyle}>Chat about this Event</h4>\r\n                <Media className=\"bg-white p-2\">\r\n                    <Media.Body>\r\n                        <Media>\r\n                            <Image src={process.env.PUBLIC_URL+\"/assets/user.png\"}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"mr-2\"\r\n                            />\r\n                            <Media.Body>\r\n                                <h6 style={{marginBottom:0,}}>Jenny Hess <span className=\"text-muted\" style={{fontSize:13,}}>Yesterday at 12:00 pm</span></h6>\r\n                                <p className=\"mb-0\">Awesome!</p>\r\n                                <p className=\"text-muted mt-0\">Reply</p>\r\n                            </Media.Body>\r\n                        </Media>\r\n                        <Media>\r\n                            <Image src={process.env.PUBLIC_URL+\"/assets/user.png\"}\r\n                            width=\"30\"\r\n                            height=\"30\"\r\n                            className=\"mr-2\"\r\n                            />\r\n                            <Media.Body>\r\n                                <h6 style={{marginBottom:0,}}>Matt <span className=\"text-muted\" style={{fontSize:13,}}>Today at 7:11 pm</span></h6>\r\n                                <p className=\"mb-0\">How Attracted!</p>\r\n                                <p className=\"text-muted mt-0\">Reply</p>\r\n                                <Media>\r\n                                    <Image src={process.env.PUBLIC_URL+\"/assets/user.png\"}\r\n                                    width=\"30\"\r\n                                    height=\"30\"\r\n                                    className=\"mr-2\"\r\n                                    />\r\n                                    <Media.Body>\r\n                                        <h6 style={{marginBottom:0,}}>Henry <span className=\"text-muted\" style={{fontSize:13,}}>Just now</span></h6>\r\n                                        <p className=\"mb-0\">Awesome!</p>\r\n                                        <p className=\"text-muted mt-0\">Reply</p>\r\n                                    </Media.Body>\r\n                                </Media>\r\n                            </Media.Body>\r\n                        </Media>\r\n                        <Media>\r\n                            <Media.Body>\r\n                                <Form.Control as=\"textarea\" rows=\"3\"/>\r\n                                <Button variant=\"primary\" className=\"mt-2\">Add Comment</Button>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    </Media.Body>\r\n                </Media>\r\n            </Media.Body>\r\n        </Media>\r\n    )\r\n}","import React from 'react';\r\nimport { Media } from 'react-bootstrap';\r\n\r\nexport default function EventDetailedSideBar({attendees}){\r\n    const headStyle={\r\n        backgroundColor: 'teal',\r\n        marginBottom : 0,\r\n    }\r\n    return(\r\n        <>\r\n            <h6 className=\"text-white text-center p-2\" style={headStyle}>\r\n                {attendees.length} {attendees.length > 1 ? 'People ' : 'Person ' }\r\n                Going\r\n            </h6>\r\n            <ul className=\"list-group bg-white\">\r\n                {\r\n                    attendees.map(attendee => (\r\n                        <Media as=\"li\" className=\"list-group-item\" key={attendee.id}>\r\n                            <img\r\n                            width={64}\r\n                            height={64}\r\n                            className=\"mr-3\"\r\n                            src={ attendee.photoURL || process.env.PUBLIC_URL+\"/assets/user.png\"}\r\n                            alt=\"Generic placeholder\"\r\n                            />\r\n                            <Media.Body>\r\n                            <h5>{attendee.name}</h5>\r\n                            </Media.Body>\r\n                        </Media>\r\n                    ))\r\n                }\r\n                </ul>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport EventDetailedHeader from './EventDetailedHeader';\r\nimport EventDetailedInfo from './EventDetailedInfo';\r\nimport EventDetailedChat from './EventDetailedChat';\r\nimport EventDetailedSideBar from './EventDetailedSidebar';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function EventDetailed({match}){\r\n    const event = useSelector(state => state.event.events.find(evt => evt.id === match.params.id))\r\n    return(\r\n        <Row>\r\n            <Col md=\"8\" >\r\n                <EventDetailedHeader event={event} />\r\n                <EventDetailedInfo event={event}/>\r\n                <EventDetailedChat event={event}/>\r\n            </Col>\r\n            <Col md=\"4\" >\r\n                <EventDetailedSideBar attendees={event.attendees}/>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default function MyTextInput({label,...pros}){\r\n    const [field,meta] =  useField(pros)\r\n    return(\r\n        <Form.Group controlId={pros.name}>\r\n            {label && <Form.Label>{label}</Form.Label> }\r\n            <Form.Control {...field} {...pros} isInvalid={meta.touched && !!meta.error} isValid={meta.touched && !meta.error}/>\r\n            {meta.touched && meta.error ? (\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            {meta.error} \r\n            </Form.Control.Feedback>\r\n            ) : null\r\n            }\r\n\r\n        </Form.Group>\r\n    )\r\n}","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default function MyTextArea({label,...pros}){\r\n    const [field,meta] =  useField(pros)\r\n    return(\r\n        <Form.Group>\r\n            {label && <Form.Label>{label}</Form.Label> }\r\n            <Form.Control as=\"textarea\" rows=\"3\" {...field} {...pros} isInvalid={meta.touched && !!meta.error} isValid={meta.touched && !meta.error}/>\r\n            {meta.touched && meta.error ?(\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            {meta.error}\r\n            </Form.Control.Feedback>\r\n            ) : null\r\n            }\r\n\r\n        </Form.Group>\r\n    )\r\n}","import React from 'react';\r\nimport { useField } from 'formik';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nexport default function MySelectInput({label,...props}){\r\n    const [field,meta,helpers] =  useField(props)\r\n    return(\r\n        <Form.Group controlId={props.name}>\r\n            {label && <Form.Label>{label}</Form.Label> }\r\n            <Form.Control \r\n                as=\"select\" \r\n                custom\r\n                value={field.value || null}\r\n                onChange={(e)=>helpers.setValue(e.target.value)}\r\n                onBlur={()=>helpers.setTouched(true)}\r\n                {...props} \r\n                isInvalid={meta.touched && !!meta.error} \r\n                isValid={meta.touched && !meta.error}>\r\n                {props.options.map(opt=>(\r\n                    <option \r\n                    key={opt.key}\r\n                    value={opt.value}>{opt.text}</option>\r\n                ))}\r\n            </Form.Control>\r\n            {meta.touched && meta.error ? (\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            {meta.error} \r\n            </Form.Control.Feedback>\r\n            ) : null\r\n            }\r\n\r\n        </Form.Group>\r\n    )\r\n}","export const categoryData = [\r\n    {key: 'drinks', text: 'Drinks', value: 'drinks'},\r\n    {key: 'culture', text: 'Culture', value: 'culture'},\r\n    {key: 'film', text: 'Film', value: 'film'},\r\n    {key: 'food', text: 'Food', value: 'food'},\r\n    {key: 'music', text: 'Music', value: 'music'},\r\n    {key: 'travel', text: 'Travel', value: 'travel'},\r\n];","import React from 'react';\r\nimport { useField, useFormikContext } from 'formik';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nexport default function MyDateInput({label,...props}){\r\n    const {setFieldValue} = useFormikContext()\r\n    const [field,meta] =  useField(props)\r\n    return(\r\n        <Form.Group controlId={props.name}>\r\n            {label && <Form.Label>{label}</Form.Label> }\r\n            <DatePicker \r\n             {...field} \r\n             {...props} \r\n             selected={(field.value && new Date(field.value)) || null}\r\n             onChange={value=>setFieldValue(field.name,value)}\r\n            />\r\n            {meta.touched && meta.error ? (\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            {meta.error} \r\n            </Form.Control.Feedback>\r\n            ) : null\r\n            }\r\n\r\n        </Form.Group>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {  Media, Button } from 'react-bootstrap';\r\nimport cuid from 'cuid';\r\nimport { Link} from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { updateEvent, createEvent } from '../events/EventActions';\r\nimport { Formik,Form} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../app/common/form/myTextInput';\r\nimport MyTextArea from '../../app/common/form/myTextArea';\r\nimport MySelectInput from '../../app/common/form/mySelectInput';\r\nimport { categoryData } from '../../app/api/categoryOptions';\r\nimport MyDateInput from '../../app/common/form/myDateInput';\r\n\r\nexport default function EventForm({match,history}) {\r\n    const selectedEvent = useSelector(state=>state.event.events.find(evt=> evt.id === match.params.id))\r\n    const initialValues = selectedEvent ?? {\r\n        'title' : '',\r\n        'category' : '',\r\n        'description' : '',\r\n        'venue' : '',\r\n        'city' : '',\r\n        'date' : '',\r\n    }\r\n    const [values,setValues] = useState(initialValues)\r\n    const dispatch =  useDispatch()\r\n    \r\n    const validationSchema = Yup.object({\r\n        title : Yup.string().required('kuch title daal le bhai'),\r\n        category : Yup.string().required(),\r\n        description : Yup.string().required(),\r\n        venue : Yup.string().required(),\r\n        city : Yup.string().required(),\r\n        date : Yup.string().required(),\r\n    })\r\n\r\n    return(\r\n           <Media className=\"bg-white mt-2 p-2 rounded\">\r\n               <Media.Body>\r\n                   <h5>{selectedEvent ? 'Edit the Event':'Create new Event'}</h5>\r\n                   <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={values    =>{\r\n                        selectedEvent ? dispatch(updateEvent({...selectedEvent,...values})):\r\n                        dispatch(createEvent({...values,id:cuid(),attendees:[],hostPhotoURL:'assets/user.png',hostedBy:'Bob'}))\r\n                        history.push(process.env.PUBLIC_URL+\"/events\")\r\n                    }}\r\n                   >\r\n                       {({isValid,isSubmitting,dirty})=>(\r\n                            <Form className=\"form\">\r\n                                <MyTextInput name=\"title\" placeholder=\"Event Title\" />\r\n                                <MySelectInput name=\"category\" placeholder=\"Category\" options={categoryData}/>\r\n                                <MyTextArea name=\"description\" placeholder=\"Description\" />\r\n                                <MyTextInput name=\"city\" placeholder=\"City\" />\r\n                                <MyTextInput name=\"venue\" placeholder=\"Venue\" />\r\n                                <MyDateInput \r\n                                    name=\"date\" \r\n                                    placeholderText=\"Date\"\r\n                                    timeFormat=\"HH:mm\"\r\n                                    showTimeSelect\r\n                                    timeCaption='time'\r\n                                    dateFormat=\"MMMM d, yyyy h:mm a\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                                <Button \r\n                                loading={isSubmitting}\r\n                                disabled={isSubmitting || !dirty || !isValid}\r\n                                className=\"float-right ml-2\"\r\n                                 variant=\"success\"\r\n                                  type=\"submit\">\r\n                                    Submit\r\n                                </Button>\r\n                                <Button \r\n                                disabled={isSubmitting}\r\n                                className=\"float-right ml-2\" variant=\"secondary\" type=\"button\" as={Link} to={process.env.PUBLIC_URL+\"/events\"}>\r\n                                    Cancel\r\n                                </Button>\r\n                            </Form>\r\n                       )}\r\n                   </Formik>\r\n               </Media.Body>\r\n           </Media>\r\n    )\r\n}","export const INCREMENT_OPERATOR = \"INCREMENT_OPERATOR\"\r\nexport const DECREMENT_OPERATOR = \"DECREMENT_OPERATOR\"\r\nconst initialState = {\r\n    data : 40\r\n}\r\n\r\nexport function increment(amount){\r\n    return{\r\n        type: INCREMENT_OPERATOR,\r\n        payload : amount\r\n    }\r\n}\r\nexport function decrement(amount){\r\n    return{\r\n        type: DECREMENT_OPERATOR,\r\n        payload : amount\r\n    }\r\n}\r\n\r\nexport default function testReducer(state=initialState,{type,payload}){\r\n    switch(type){\r\n        case INCREMENT_OPERATOR:\r\n            return{\r\n                ...state,\r\n                data : state.data+payload\r\n            }\r\n            case DECREMENT_OPERATOR:\r\n                return{\r\n                    ...state,\r\n                    data : state.data-payload\r\n                }\r\n                default :\r\n                return state;\r\n    \r\n    }\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\nimport { decrement, increment } from './testReducer';\r\nimport { openModal } from '../../app/common/modals/modalReducer';\r\n\r\nexport default function Sandbox(){\r\n    const dispatch = useDispatch()\r\n    const data = useSelector(state=>state.test.data)\r\n    return(\r\n        <>\r\n            <h1>Testing Sandbox</h1>\r\n            <h3>The data is: {data}</h3>\r\n            <Button variant=\"success\" onClick={()=>dispatch(increment(8))} >Increment</Button> {' '}\r\n            <Button variant=\"danger\" onClick={()=>dispatch(decrement(9))} >Decrement</Button> {' '}\r\n            <Button style={{backgroundColor:\"teal\"}} \r\n            onClick={()=>\r\n                    dispatch(openModal({ modalType : 'TestModal', modalProps: { data } } ))\r\n                } \r\n            >\r\n                Open Modal\r\n            </Button>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { closeModal } from './modalReducer';\r\n\r\nexport default function ModalWrapper({children,size,header}){\r\n    const dispatch = useDispatch()\r\n    return(\r\n        <Modal\r\n        size={size}\r\n        show={true}\r\n        onHide={() => dispatch(closeModal())}\r\n        >\r\n            { header &&\r\n            <Modal.Header closeButton>\r\n            <Modal.Title>\r\n            {header}\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            }\r\n            <Modal.Body>\r\n            {children}\r\n            </Modal.Body>\r\n      </Modal>\r\n    )\r\n}","import React from 'react';\r\nimport ModalWrapper from '../../app/common/modals/modalWrapper'\r\nexport default function TestModal({data}){\r\n    return(\r\n        <ModalWrapper size=\"sm\" header=\"Test Header\">\r\n            <div>The data is : {data}</div>\r\n        </ModalWrapper>\r\n    )\r\n}","import React from 'react';\r\nimport ModalWrapper from '../../app/common/modals/modalWrapper'\r\nimport { Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport MyTextInput from '../../app/common/form/myTextInput';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signInUser } from './authActions';\r\nimport { closeModal } from '../../app/common/modals/modalReducer';\r\nexport default function LoginForm(){\r\n    const dispatch = useDispatch()\r\n    return(\r\n        <>\r\n            <ModalWrapper size=\"sm\" header=\"Sign in to Re-vents\">\r\n                <Formik\r\n                     initialValues={{\r\n                        email : \"\",\r\n                        password : \"\",\r\n                        }}  \r\n                    validationSchema={Yup.object({\r\n                        email : Yup.string().required().email(),\r\n                        password : Yup.string().required()\r\n                    })}\r\n\r\n                    onSubmit={(values,{setSubmitting})=>{\r\n                        dispatch(signInUser(values))\r\n                        setSubmitting(false)\r\n                        dispatch(closeModal())\r\n                    }\r\n                }\r\n                >\r\n                    {({isSubmitting,isValid,dirty})=>(\r\n                        <Form>\r\n                            <MyTextInput name=\"email\" placeholder=\"Email Address\" />\r\n                            <MyTextInput name=\"password\" type=\"password\" placeholder='password' />\r\n                            <Button type=\"submit\" variant=\"success\"\r\n                                disabled={isSubmitting || !dirty || !isValid}\r\n                                >\r\n                                {!isSubmitting ? 'Login' :<Spinner animation=\"border\" variant=\"light\" />}\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </ModalWrapper>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport TestModal from '../../../features/sandbox/testModal';\r\nimport LoginForm from '../../../features/auth/loginForm'\r\n\r\nexport default function ModalManager(){\r\n    const modalLookup = {\r\n        TestModal,\r\n        LoginForm\r\n    }\r\n    const currentModal = useSelector(state=>state.modal)\r\n    let renderedModal\r\n    if(currentModal){\r\n        const {modalType,modalProps} = currentModal\r\n        const ModalComponent = modalLookup[modalType]\r\n        renderedModal = <ModalComponent {...modalProps} />\r\n    }\r\n    return <span>{renderedModal}</span>\r\n}","import React from 'react';\nimport EventDashboard from '../../features/events/eventDashboard/EventDashboard';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from '../../features/nav/NavBar';\nimport { Container } from 'react-bootstrap';\nimport { Route, useLocation } from 'react-router-dom';\nimport HomePage from '../../features/home/HomePage';\nimport EventDetailed from '../../features/events/eventDetailed.jsx/EventDetailed';\nimport EventForm from '../../features/eventForm/EventForm';\nimport Sandbox from '../../features/sandbox/sandbox';\nimport ModalManager from '../common/modals/modalManager';\n\nfunction App() {\n  const {key} = useLocation()\n  return (\n    <>\n      <ModalManager />\n      <Route exact path={process.env.PUBLIC_URL+\"/\"} component={HomePage}/>\n      <Route path={process.env.PUBLIC_URL+'/(.+)'} render={() => (\n        <>\n          <NavBar />\n          <Container className=\"content-body\">\n            <Route exact path={process.env.PUBLIC_URL+\"/events\"} component={EventDashboard}/>\n            <Route path={process.env.PUBLIC_URL+\"/events/:id\"} component={EventDetailed}/>\n            <Route path={process.env.PUBLIC_URL+\"/sandbox\"} component={Sandbox}/>\n            <Route path={[process.env.PUBLIC_URL+\"/createevent\",process.env.PUBLIC_URL+\"/manage/:id\"]} key={key} component={EventForm}/>\n          </Container>\n        </>\n      ) } />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {sampleData} from '../../app/api/sampleData'\r\nimport { CREATE_EVENT, DELETE_EVENT, UPDATE_EVENT } from './EventConstants'\r\nconst initialState = {\r\n    events : sampleData\r\n}\r\n\r\nexport default function eventReducer(state=initialState, {type,payload}){\r\n    switch(type){\r\n        case CREATE_EVENT:\r\n            return {\r\n                ...state,\r\n                events : [...state.events,payload]\r\n            }\r\n        case UPDATE_EVENT:\r\n            return {\r\n                ...state,\r\n                events : [...state.events.filter(evt => evt.id !== payload.id),payload]\r\n            }\r\n        case DELETE_EVENT:\r\n            return {\r\n                ...state,\r\n                events : [...state.events.filter(evt => evt.id !== payload)]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const sampleData = [\r\n    {\r\n        id: '1',\r\n        title: 'Trip to Empire State building',\r\n        date: new Date('2018-03-21'),\r\n        category: 'culture',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\r\n        city: 'NY, USA',\r\n        venue: 'Empire State Building, 5th Avenue, New York, NY, USA',\r\n        hostedBy: 'Bob',\r\n        hostPhotoURL: 'https://randomuser.me/api/portraits/men/20.jpg',\r\n        attendees: [\r\n            {\r\n                id: 'a',\r\n                name: 'Bob',\r\n                photoURL: 'https://randomuser.me/api/portraits/men/7.jpg'\r\n            },\r\n            {\r\n                id: 'b',\r\n                name: 'Tom',\r\n                photoURL: 'https://randomuser.me/api/portraits/men/77.jpg'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Trip to Punch and Judy Pub',\r\n        date: new Date('2018-03-18'),\r\n        category: 'drinks',\r\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.',\r\n        city: 'London, UK',\r\n        venue: 'Punch & Judy, Henrietta Street, London, UK',\r\n        hostedBy: 'Tom',\r\n        hostPhotoURL: 'https://randomuser.me/api/portraits/men/22.jpg',\r\n        attendees: [\r\n            {\r\n                id: 'a',\r\n                name: 'Bob',\r\n                photoURL: 'https://randomuser.me/api/portraits/men/18.jpg'\r\n            },\r\n            {\r\n                id: 'b',\r\n                name: 'Tom',\r\n                photoURL: 'https://randomuser.me/api/portraits/men/15.jpg'\r\n            }\r\n        ]\r\n    }\r\n];\r\n","import { SIGN_IN_USER, SIGN_OUT_USER } from \"./authConstants\"\r\n\r\nconst initialState = {\r\n    authenticated : false,\r\n    currentUser : null\r\n}\r\n\r\nexport default function authReducer(state=initialState,{type,payload}){\r\n    switch(type){\r\n        case SIGN_IN_USER:\r\n            return {\r\n                ...state,\r\n                authenticated:true,\r\n                currentUser : {\r\n                    email : payload.email,\r\n                    photoURL : \"/assets/user.png\"\r\n                }\r\n            }\r\n            case SIGN_OUT_USER:\r\n                return {\r\n                    ...state,\r\n                    authenticated:false,\r\n                    currentUser:null,\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport testReducer from '../../features/sandbox/testReducer';\r\nimport eventReducer from '../../features/events/EventReducer';\r\nimport modalReducer from '../common/modals/modalReducer';\r\nimport authReducer from '../../features/auth/authReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    test : testReducer,\r\n    event : eventReducer,\r\n    modal : modalReducer,\r\n    auth : authReducer\r\n})\r\n\r\nexport default rootReducer;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layouts/styles.css';\nimport App from './app/layouts/App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './app/store/configureStore';\nimport ScrollToTop from './app/layouts/ScrollToTop';\n\nconst store= configureStore()\n\nconst rootEl = document.getElementById('root')\nfunction render(){\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <ScrollToTop/>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  ,rootEl);\n}\nif(module.hot){\n  module.hot.accept('./app/layouts/App.jsx',function(){\n    setTimeout(render)\n  })\n}\nrender()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore} from 'redux';\r\nimport {devToolsEnhancer} from 'redux-devtools-extension';\r\nimport rootReducer from './rootReducer';\r\n\r\nexport function configureStore(){\r\n    return createStore(rootReducer,devToolsEnhancer())\r\n}\r\n\r\n"],"sourceRoot":""}